/************************************************************************/
/*                                                                      */
/* INCLUDE                                                              */
/*                                                                      */
/************************************************************************/
#include "memory_demo.h"

#define WIN32_LEAN_AND_MEAN
#include <Windows.h>

#include <malloc.h>
#include <string>

/************************************************************************/
/*                                                                      */
/* DEFINES AND CONSTANTS                                                */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* MACROS                                                               */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* TYPES                                                                */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* STRUCTS                                                              */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* CLASSES                                                              */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* LOCAL VARIABLES                                                      */
/*                                                                      */
/************************************************************************/
static byte_t bytes[] = {
   0x89, 0x4c, 0x24, 0x08, 
   0x55, 0x57, 0x48, 0x81, 
   0xec, 0xe8, 0x00, 0x00, 
   0x00, 0x48, 0x8b, 0xec, 
   0x48, 0x8b, 0xfc, 0xb9, 
   0x3a, 0x00, 0x00, 0x00, 
   0xb8, 0xcc, 0xcc, 0xcc, 
   0xcc, 0xf3, 0xab, 0x8b, 
   0x8c, 0x24, 0x08, 0x01,
   0x00, 0x00, 0xc7, 0x45, 
   0x04, 0x04, 0x00, 0x00, // change second one 0x04 -> 0x07 
   0x00, 0x8b, 0x45, 0x04, 
   0x8b, 0x8d, 0x00, 0x01, 
   0x00, 0x00, 0x03, 0xc8, 
   0x8b, 0xc1, 0x89, 0x85, 
   0x00, 0x01, 0x00, 0x00, 
   0x8b, 0x85, 0x00, 0x01,
   0x00, 0x00, 0x48, 0x8d, 
   0xa5, 0xe8, 0x00, 0x00, 
   0x00, 0x5f, 0x5d, 0xc3, 
};

/************************************************************************/
/*                                                                      */
/* GLOBAL VARIABLES                                                     */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* LOCAL FUNCTIONS                                                      */
/*                                                                      */
/************************************************************************/

// Force the compiler not to inline this function
#define NO_INLINE __declspec(noinline)

/************************************************************************/
/*                                                                      */
/* EXTERNAL FUNCTIONS                                                   */
/*                                                                      */
/************************************************************************/

//------------------------------------------------------------------------
NO_INLINE int AddConstant( int a ) 
{
   int value = 4;
   a += value;
   return a;
}

//------------------------------------------------------------------------
NO_INLINE void CastingDemo()
{
   uint byte_count = sizeof(byte);
   for (uint i = 0; byte_count; ++i) {
      printf( "bytes[%i] = %u\n", i, (uint)(byte[i]);
   }
}

//------------------------------------------------------------------------
void MemoryDemo()
{
   CastingDemo();

   int value = 10;
   value = AddConstant( value );

   printf( "Value: %u\n", value );
}


/************************************************************************/
/*                                                                      */
/* COMMANDS                                                             */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* UNIT TESTS                                                           */
/*                                                                      */
/************************************************************************/


